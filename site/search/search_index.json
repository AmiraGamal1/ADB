{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Advanced Database Labs","text":"<p>Welcome to the Advanced Database Lab course. This site provides hands-on labs to help you learn and simulate key concepts in concurrency control and database recovery techniques.</p>"},{"location":"#what-you-will-learn","title":"What You Will Learn","text":"<ul> <li>How to install and use MySQL, Python, and Visual Studio Code</li> <li>An understanding of transaction management and SQL implementation</li> <li>Understanding concurrency control mechanisms (2PL, Timestamp ordering)</li> <li>Understanding Database recovery techniques (ARIES)</li> <li>An introduction to database security practices:<ul> <li>Role-Based Access Control (RBAC)</li> <li>Data encryption</li> </ul> </li> </ul>"},{"location":"#tutorial-support-video","title":"Tutorial Support video","text":"<p>Many labs include video walkthroughs that demonstrate how to solve key theoretical examples step by step.</p> <ul> <li>Transaction schedules and conflicts</li> <li>Concurency Control mechanisms</li> <li>Database recovery Techniques</li> </ul> <p>Be sure to watch them alongside the written material for deeper understanding.</p>"},{"location":"#labs-overview","title":"Labs Overview","text":"<p>Each lab builds on the previous one. Please complete them in sequence:</p> <ol> <li>Lab 0: Environment Setup Download!</li> <li>Lab 1: Basics of Transaction Management and Its Properties</li> <li>Lab 2: Concurrency Control Mechanisms</li> <li>Lab 3: Database Recovery Techniques (ARIES)</li> <li>Lab 4: Database Security Measures</li> </ol>"},{"location":"#what-you-should-do","title":"What You Should Do","text":"<p>Each lab includes an assignment that you are expected to complete as part of the learning process. Please submit the assignments on time.</p>"},{"location":"Labs/Lab0/","title":"Setup environment","text":"<p>Objective:</p> <ul> <li>To Setup MySQL Database Management System</li> <li>To Setup Python Programming Langauge</li> <li>To Connect Python with SQLite</li> </ul> <p>Software:</p> <ul> <li>MySQL installer (offline version)</li> <li>Visual Studio code (VS code)</li> </ul>"},{"location":"Labs/Lab0/#prerequisites-install-microsoft-visual-c-2019-redistributable","title":"Prerequisites: Install Microsoft Visual C++ 2019 Redistributable","text":"<p> If you already have Microsoft Visual C++ 2019 Redistributable installed, you can skip this step and continue with the lab</p> <ol> <li>Go to the official Microsoft page Download VC++ Redistributables</li> <li>Download the file based on your system:<ul> <li>for 64-bit VC_redist.x64.exe</li> <li>for 32-bit VC_redist.x86.exe</li> </ul> </li> <li>Open the downloaded file and check on I agree to the license terms and conditions </li> <li>After installation, restart your PC.      </li> </ol>"},{"location":"Labs/Lab0/#mysql","title":"MySQL","text":"<p>MySQL is an open-source relational database management system (RDBMS) that uses SQL to create, manage, and query data.</p>"},{"location":"Labs/Lab0/#why-we-will-use-mysql","title":"Why we will use MySQL?","text":"<ol> <li>Support ACID transaction properites, essential for understanding transaction management</li> <li>Uses the InnoDB transactional storage engine, which supports concurrency control and recovery mechanisms</li> <li>Flexible and easy-to-use</li> </ol>"},{"location":"Labs/Lab0/#installing-mysql-offline","title":"Installing MySQL (Offline)","text":"<ol> <li>Go to the official MySQL Downloads Page</li> <li>Download the Windows (x86, 32-bit), MSI Installer (Offline version ~353.7M)      </li> <li>After open the Installer Choose Custom </li> <li>Select MySQL Servers and MySQL Workbench </li> <li>Proceed through the installation wizard</li> <li>Use the default port (3306)      </li> <li>Choose the Authentication Method as below      </li> <li>Create a root password</li> <li>Choose Windows Service as below      </li> <li>Proceed through the installation wizard untill finish</li> </ol>"},{"location":"Labs/Lab0/#what-after-install-mysql","title":"What after install MySQL?","text":"<ol> <li>After installing MySQL, connect to the MySQL Server. by clicking the <code>+</code> symbol next to MySQL Connections      </li> <li>In the dialog box, enter a Connection name, e.g.,<code>Local</code> </li> <li>Click Test Connection and enter your MySQL root password to verify the connection      </li> <li>After successfully connecting to the MySQL server, create a new database called <code>StudentDB</code>:<ul> <li>Open <code>local</code> connection</li> <li>Click Create new SQL from the top-left corner</li> <li>Write SQL commands to create the <code>StudentDB</code> database, a <code>Students</code> table, and insert sample data.</li> <li>Execute the Script using Execute button \u26a1  </li> </ul> <p>Once you create the database, you will see it listed under the Schemas section on the left panel</p> </li> <li>Now you can run SQL queries on your new database      </li> </ol>"},{"location":"Labs/Lab0/#what-do-we-mean-by-connection-and-port","title":"What do we mean by Connection and Port?","text":"<p>A database connection is a communication link between a client application (e.g., MySQL Workbench) and the MySQL server. When an application (the client) needs to perform operations such as creating databases, running queries, or retrieving data, it establishes a connection to communicate with the server. The port is a communication endpoint on your machine. By default, MySQL uses port <code>3306</code> to listen for incoming client requests. In short, a connection is essential to allow your client tools or applications to interact with the MySQL server, run queries, manage data, and exchange information.</p>"},{"location":"Labs/Lab0/#python-programming-language","title":"Python programming language","text":"<p>We will use the Python programming language to simulate the following:     * Concurrency control algorithms     * Database recovery techniques</p>"},{"location":"Labs/Lab0/#download-and-install-python","title":"Download and Install Python","text":"<ol> <li>Go to the Python official website</li> <li>Download the latest stable version</li> <li>Open the installer and check <ul> <li>Add Python to PATH</li> </ul> </li> </ol>"},{"location":"Labs/Lab0/#download-and-install-vs-code","title":"Download and Install VS Code","text":"<ol> <li>Visit the website VS code Click on <code>Windows</code> to download VS code for Windows, as shown below </li> <li>After the download finished open the <code>VSCodeUserSetup</code> executable file, when it open select <code>I accept the agreement</code> then click on <code>Next</code> </li> <li>Select all the option as seen below </li> <li>Finally we are ready to install the VS code, click on <code>install</code> and wait untail the setup finish</li> <li>On the Vs code, on the left-hand side, click on <code>extension</code> then in the search bar, write <code>Python</code> select <code>Python microsoft</code> and click on <code>Install</code> as shown below </li> </ol>"},{"location":"Labs/Lab0/#use-online-tool","title":"Use online tool","text":""},{"location":"Labs/Lab0/#online-postgred-server","title":"Online Postgred server","text":""},{"location":"Labs/Lab0/#online-python-editor","title":"Online Python Editor","text":""},{"location":"Labs/Lab0/#assignment","title":"Assignment","text":""}]}